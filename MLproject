name: EDDI

conda_env: conda.yml
# Can have a docker_env instead of a conda_env, e.g.
# docker_env:
#    image:  mlflow-docker-example

entry_points:
  train:
    parameters:
      runMode: {type: string, default: 'default'}
      userInput: {type: string, default: '{}'}
      userId: {type: string, default: ''}
      operationId: {type: string, default: ''}
      predecessorOperationId: {type: string, default: ''}
      productName: {type: string, default: ''}
      deploymentName: {type: string, default: ''}
      apiVersion: {type: string, default: ''}
      subscriptionId: {type: string, default: ''}
    successors: 
      - batchinference
      - deploy
    verb: train
    noun: models
    output: json
    command: "python src/luna_publish/train.py --runMode {runMode} --userInput {userInput} --userId {userId} --operationId {operationId} --predecessorOperationId {predecessorOperationId} --productName {productName} --deploymentName {deploymentName} --apiVersion {apiVersion} --subscriptionId {subscriptionId}"
  batchinference:
    parameters:
      runMode: {type: string, default: 'default'}
      userInput: {type: string, default: '{}'}
      userId: {type: string, default: ''}
      operationId: {type: string, default: ''}
      predecessorOperationId: {type: string, default: ''}
      productName: {type: string, default: ''}
      deploymentName: {type: string, default: ''}
      apiVersion: {type: string, default: ''}
      subscriptionId: {type: string, default: ''}
    successros:
    verb: batchinference
    noun: inferenceresult
    output: json
    command: "python src/luna_publish/batchinference.py --runMode {runMode} --userInput {userInput} --userId {userId} --operationId {operationId} --predecessorOperationId {predecessorOperationId} --productName {productName} --deploymentName {deploymentName} --apiVersion {apiVersion} --subscriptionId {subscriptionId}"
  deploy:
    parameters:
      runMode: {type: string, default: 'default'}
      userInput: {type: string, default: '{}'}
      userId: {type: string, default: ''}
      operationId: {type: string, default: ''}
      predecessorOperationId: {type: string, default: ''}
      productName: {type: string, default: ''}
      deploymentName: {type: string, default: ''}
      apiVersion: {type: string, default: ''}
      subscriptionId: {type: string, default: ''}
    successros:
    verb: deploy
    noun: endpoints
    output: json
    command: "python src/luna_publish/train.py --runMode {runMode} --userInput {userInput} --userId {userId} --operationId {operationId} --predecessorOperationId {predecessorOperationId} --productName {productName} --deploymentName {deploymentName} --apiVersion {apiVersion} --subscriptionId {subscriptionId}"